{"version":3,"sources":["notifyFolder/Notify.module.css","addnomberFolder/addNomber.js","createnomberFolder/createNumber.js","contactsFolder/ContactsItem.js","contactsFolder/Contacts.js","filterFolder/Filter.js","notifyFolder/Notification.js","phonebookFolder/Phonebook.js","index.js"],"names":["module","exports","AddNomber","nomberEditor","type","onClick","createNumber","uuid","ContactsItem","id","name","number","onRemoveTask","key","Contacts","contactsAll","TransitionGroup","component","className","map","CSSTransition","timeout","classNames","Filter","searchAll","Notification","styles","notify","Phonebook","state","contacts","search","notifyChange","setState","notifyTimeout","setTimeout","addContact","phoneNumber","prevState","contact","some","theName","removeContact","contactId","filter","inputChangeName","e","preventDefault","target","value","inputChangeNumber","inputChangeContact","findNumber","persistedContacts","localStorage","getItem","this","JSON","parse","prevProps","setItem","stringify","in","appear","unmountOnExit","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f63c44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notify_notify__1hyZz\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddNomber({ nomberEditor }) {\r\n    return (\r\n        <div>\r\n            <button type=\"submit\" onClick={nomberEditor}>ДОБАВИТЬ</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddNomber.propTypes = {\r\n    nomberEditor: PropTypes.func.isRequired,\r\n  };","import { uuid } from \"uuidv4\";\r\n\r\nexport default function createNumber() {\r\n  return uuid();\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsItem = ({ id, name, number, onRemoveTask }) => (\r\n    <li key={id}>\r\n      <p>\r\n        {name} {number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => onRemoveTask(id)}>\r\n        Удалить\r\n      </button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemoveTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsItem;","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./FadeStyles.css\";\r\nimport ContactsItem from \"./ContactsItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contacts = ({ contactsAll, onRemoveTask }) => (\r\n<TransitionGroup component=\"ul\" className=\"fade\">\r\n    {contactsAll.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"fade\">\r\n      <ContactsItem id={id} name={name} number={number} onRemoveTask={onRemoveTask} />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contactsAll: PropTypes.array.isRequired,\r\n  onRemoveTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ searchAll }) => (\r\n  <ul>\r\n    {searchAll.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>{name} {number}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFilter.propTypes = {\r\n  searchAll: PropTypes.array.isRequired,\r\n};\r\nexport default Filter;","import React from \"react\";\r\nimport styles from \"./Notify.module.css\";\r\n\r\nconst Notification = () => (\r\n    <p className={styles.notify}>THIS CONTACT ALREADY EXISTS ! </p>\r\n);\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport AddNomber from \"../addnomberFolder/addNomber\";\r\nimport createNumber from \"../createnomberFolder/createNumber\";\r\nimport Contacts from \"../contactsFolder/Contacts\";\r\nimport Filter from \"../filterFolder/Filter\";\r\nimport Notification from \"../notifyFolder/Notification\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./NotifyStyles.css\";\r\nimport \"./MyStyles.css\";\r\n\r\nexport default class Phonebook extends React.Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    name: \"\",\r\n    number: \"\",\r\n    search: [],\r\n    notify: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  notifyChange = () => {\r\n    this.setState({\r\n      notify: true,\r\n    });\r\n  }\r\n\r\n  notifyTimeout = () => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        notify: false,\r\n      });\r\n    }, 1500);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = () => {\r\n    const phoneNumber = createNumber();\r\n    this.setState((prevState) => {\r\n      const contactNames = prevState.contacts.map(contact => contact.name);\r\n      if (contactNames.some(theName => theName === prevState.name)) {\r\n        this.notifyChange();\r\n        this.notifyTimeout();\r\n      }\r\n      else return {\r\n        contacts: [\r\n          { id: phoneNumber, name: this.state.name, number: this.state.number },\r\n          ...prevState.contacts,\r\n        ],\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  inputChangeName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  inputChangeNumber = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  inputChangeContact = (e) => {\r\n    e.preventDefault();\r\n    const findNumber = this.state.contacts.filter(\r\n      (contact) => contact.name === e.target.value\r\n    );\r\n    this.setState({ search: [...findNumber] });\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={this.state.notify === true}\r\n          appear={true}\r\n          classNames=\"notify\"\r\n          timeout={5000}\r\n          unmountOnExit\r\n        >\r\n          <Notification className=\"notify\"/>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"my\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.name}\r\n          onChange={this.inputChangeName}\r\n        />\r\n        <p>Number</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.number}\r\n          onChange={this.inputChangeNumber}\r\n        />\r\n        {this.state.name && this.state.number && (\r\n          <AddNomber nomberEditor={this.addContact} />\r\n        )}\r\n        <p>Search</p>\r\n        <Filter searchAll={this.state.search} />\r\n        <input type=\"text\" onChange={this.inputChangeContact} />\r\n        <p>Contacts</p>\r\n        <Contacts contactsAll={contacts} onRemoveTask={this.removeContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Phonebook from \"./phonebookFolder/Phonebook\";\n\nReactDOM.render(\n    <Phonebook />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}